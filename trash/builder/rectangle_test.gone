package builder

/*
import (
	"testing"

	"github.com/barnex/bruteray/color"
	"github.com/barnex/bruteray/material"
	"github.com/barnex/bruteray/test"
	"github.com/barnex/bruteray/texture"
)

func TestRectangle(t *testing.T) {
	scene := NewSceneBuilder()

	scene.Add(NewSheet(material.Grid()))
	{
		mat := material.Flat(texture.Checkers(1, 1, color.Red, color.Blue))
		s := NewRectangleWithVertices(mat, O, Ex.Mul(2), Ey)
		Translate(s, Vec{-1, 0, 0})
		Scale3(s, O, 1, 2, 1)
		//Yaw(s, 10*Deg)
		Roll(s, 10*Deg)
		//RollAround(s, Vec{-1,0,0}, 10*Deg)
		//Pitch(s, 10*Deg)
		//Translate(s, Vec{0, 1, 0})
		scene.Add(s)
	}
	//{
	//	s := NewRectangleWithVertices(grid, O, Ex, Ey)
	//	Translate(s, Vec{-1, -0.5, 0})
	//	Scale(s, 2)
	//	Pitch(s, -90*Deg)
	//	scene.Add(s)
	//}

	scene.Camera.Translate(Vec{.0, 1, -3})
	test.OnePass(t, scene.Build(), test.DefaultTolerance)
}

func TestRectangle_Ctrl(t *testing.T) {
	scene := NewSceneBuilder()
	//TODO: test bounding
	scene.Add(NewSheetXZ(material.Grid()))
	{
		s := NewRectangleWithVertices(material.Grid(), O, Ex, Ez)
		Translate(s, Vec{0, 0.001, 0})

		scene.Add(s)
	}

	scene.Camera.Translate(Vec{.01, 3, -7})
	scene.Camera.Pitch(-20 * Deg)
	test.OnePass(t, scene.Build(), test.DefaultTolerance)
}
*/
